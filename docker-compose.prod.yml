
version: "3.5"

# External network
networks:
    ${CADDY_NETWORK_NAME}:
        external: true

volumes:
    postgres_data:


services:

    # Django app
    django:
        restart: always
        build:
            context: ${ROOT_FOLDER}/api
            dockerfile: ${ROOT_FOLDER}/api/Dockerfile
        expose:
            - 8000
        environment:
            - url=${API_URL}
        command:
            "gunicorn config.wsgi:application --bind 0.0.0.0:8000"
        env_file:
            - ${ROOT_FOLDER}/env/.env.${ENVIRONMENT}
        depends_on:
            - db
        networks:
            - ${CADDY_NETWORK_NAME}


    # Task runners
    redis:
        restart: always
        image: "redis:alpine"
        restart: always
        networks:
            - ${CADDY_NETWORK_NAME}

    celery:
        restart: always
        build:
            context: ${ROOT_FOLDER}/api
            dockerfile: ${ROOT_FOLDER}/api/Dockerfile.celery
        command: celery -A config worker --beat -l info -S django
        env_file:
            - ${ROOT_FOLDER}/env/.env.${ENVIRONMENT}
            - ${ROOT_FOLDER}/env/.env.db
        environment:
            - SQL_HOST=db
            - REDIS_URL=redis://redis:6379/1
        depends_on:
            - db
            - redis
            - django
        networks:
            - ${CADDY_NETWORK_NAME}

    # Django database
    db:
        restart: always
        image: postgres:12.0-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - ${ROOT_FOLDER}/env/.env.db
        networks:
            - ${CADDY_NETWORK_NAME}
